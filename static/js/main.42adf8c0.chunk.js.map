{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","services/normalizedMovie.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","React","memo","_ref","movie","title","description","imgUrl","imdbUrl","_jsxs","className","children","_jsx","src","alt","href","MoviesList","movies","map","imdbId","API_URL","concat","getMovie","query","fetch","then","res","json","catch","Response","Error","normalizedMovie","Title","Plot","Poster","imdbID","FindMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","isError","setIsError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","setMovie","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","movieData","wrap","_context","prev","next","preventDefault","sent","abrupt","t0","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","handleAddMovie","useCallback","movieToAdd","prevMovies","find","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42adf8c0.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(({ movie }) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '143cb8d8';\n\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { MovieData } from '../types/MovieData';\n\nexport const normalizedMovie = ({\n  Title,\n  Plot,\n  Poster,\n  imdbID,\n}: MovieData) => {\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { normalizedMovie } from '../../services/normalizedMovie';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      setIsError(false);\n      setIsLoading(true);\n      const movieData = await getMovie(query);\n\n      if ('Error' in movieData) {\n        setIsError(true);\n\n        return;\n      }\n\n      setMovie(normalizedMovie(movieData));\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAddMovie(movie);\n    }\n\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': isError,\n              })}\n              value={query}\n              onChange={handleChangeQuery}\n            />\n          </div>\n\n          {(isError && !isLoading) && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n          {(!isError && !isLoading && movie) && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = useCallback((movieToAdd: Movie) => {\n    setMovies((prevMovies) => {\n      if (prevMovies.find(movie => movie.imdbId === movieToAdd.imdbId)) {\n        return prevMovies;\n      }\n\n      return [...prevMovies, movieToAdd];\n    });\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}